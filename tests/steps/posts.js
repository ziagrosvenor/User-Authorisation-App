// Generated by CoffeeScript 1.9.0
(function() {
  module.exports = function() {
    this.Given(/^I visit Auth App$/, function() {
      return this.driver.get('http://localhost:3000');
    });
    this.When(/^I login with "([^"]*)", "([^"]*)"$/, function(email, password) {
      var LoginForm, form;
      LoginForm = this.Widget.Form.extend({
        root: '.login-form',
        submitSelector: function() {
          return this.find('button');
        }
      });
      form = new LoginForm;
      return form.submitWith({
        username: email,
        password: password
      });
    });
    this.Then(/^I can post "([^"]*)", "([^"]*)"$/, function(title, content) {
      var PostForm, form;
      PostForm = this.Widget.Form.extend({
        root: '.postForm',
        submitSelector: function() {
          return this.find('button');
        }
      });
      form = new PostForm;
      return form.submitWith({
        title: title,
        content: content
      });
    });
    this.Then(/^I can see "([^"]*)", "([^"]*)"$/, function(title, content) {
      this.Widget.read({
        selector: '.postList .post:first-child h2'
      }).should.eventually.eql(title);
      return this.Widget.read({
        selector: '.postList .post:first-child p'
      }).should.eventually.eql(content);
    });
    this.Then(/^I can edit the post to read "([^"]*)", "([^"]*)"$/, function(newTitle, newContent) {
      this.Widget.click('.postList .post:first-child #editBtn').then((function(_this) {
        return function() {
          var PostForm, form;
          PostForm = _this.Widget.Form.extend({
            root: '.postForm',
            submitSelector: function() {
              return this.find('button');
            }
          });
          form = new PostForm;
          return form.submitWith({
            title: newTitle,
            content: newContent
          });
        };
      })(this));
      return this.Widget.click('#hamburgerIcon').then((function(_this) {
        return function() {
          return _this.Widget.click('.sideNavItem:nth-child(2)').then(function() {
            _this.Widget.read({
              selector: '.postList .post:first-child h2'
            }).should.eventually.eql(newTitle);
            return _this.Widget.read({
              selector: '.postList .post:first-child p'
            }).should.eventually.eql(newContent);
          });
        };
      })(this));
    });
    return this.Then(/^I can delete the post$/, function() {
      return this.Widget.click('.postList .post:first-child #deleteBtn').then((function(_this) {
        return function() {
          return _this.Widget.isPresent('.postList .post:first-child');
        };
      })(this)).should.eventually.eql(false);
    });
  };

}).call(this);
